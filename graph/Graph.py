import matplotlib.pyplot as plt
import numpy as np
# %%
mobilenet_train_accuracy=[0.7925764322280884, 0.8864628672599792, 0.9454148411750793, 0.9650654792785645, 0.9737991094589233, 0.9912663698196411, 0.9956331849098206, 0.9890829920768738, 0.9956331849098206, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9956331849098206, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327]
mobilenet_validation_accuracy=[0.7251908183097839, 0.8015267252922058, 0.8931297659873962, 0.9312977194786072, 0.9541984796524048, 0.9770992398262024, 0.9694656729698181, 0.9770992398262024, 0.9770992398262024, 0.9847328066825867, 0.9847328066825867, 0.9847328066825867, 0.9770992398262024, 0.9847328066825867, 0.9847328066825867, 0.9847328066825867, 0.9847328066825867, 0.9923664331436157, 0.9847328066825867, 0.9847328066825867, 0.9847328066825867, 0.9847328066825867, 0.9847328066825867]
mobilenet_train_loss=[0.5240364074707031, 0.2887597978115082, 0.1660013198852539, 0.09951306134462357, 0.0778428390622139, 0.03793499991297722, 0.030364137142896652, 0.02653283067047596, 0.01812150701880455, 0.010812676511704922, 0.008200687356293201, 0.009800604544579983, 0.007602440193295479, 0.010085860267281532, 0.00867500714957714, 0.009138393215835094, 0.00998856034129858, 0.008955885656177998, 0.005524845328181982, 0.006538226269185543, 0.006047521717846394, 0.011763563379645348, 0.007948189973831177]
mobilenet_validation_loss=[0.5353926420211792, 0.4522119462490082, 0.2771063446998596, 0.1956358402967453, 0.11233824491500854, 0.10092935711145401, 0.08627799898386002, 0.08636604249477386, 0.07407013326883316, 0.07413392513990402, 0.07459494471549988, 0.08017672598361969, 0.06758725643157959, 0.0658930316567421, 0.04783214256167412, 0.059816617518663406, 0.025646107271313667, 0.03598623722791672, 0.04584139585494995, 0.05303970351815224, 0.048897456377744675, 0.043148793280124664, 0.03763243183493614]
mobilenet_test_loss=0.11680091917514801
mobilenet_test_accuracy=0.9545454382896423
# %%
vgg19_train_accuracy=[0.7620087265968323, 0.8886463046073914, 0.9192139506340027, 0.9475982785224915, 0.9628821015357971, 0.9825327396392822, 0.9890829920768738, 0.9912663698196411, 0.9978166222572327, 0.9978166222572327, 0.9934498071670532, 0.9978166222572327, 0.9956331849098206, 0.9978166222572327, 0.9956331849098206, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9956331849098206, 0.9956331849098206, 0.9934498071670532, 0.9956331849098206, 0.9978166222572327, 0.9978166222572327, 0.9956331849098206]
vgg19_validation_accuracy=[0.6870229244232178, 0.7175572514533997, 0.8015267252922058, 0.8549618124961853, 0.8778625726699829, 0.9312977194786072, 0.9465649127960205, 0.9541984796524048, 0.9618320465087891, 0.9694656729698181, 0.9694656729698181, 0.9770992398262024, 0.9847328066825867, 0.9847328066825867, 0.9770992398262024, 0.9770992398262024, 0.9694656729698181, 0.9847328066825867, 0.9770992398262024, 0.9694656729698181, 0.9770992398262024, 0.9770992398262024, 0.9694656729698181, 0.9847328066825867, 0.9923664331436157, 0.9923664331436157, 0.9847328066825867, 0.9694656729698181, 0.9847328066825867, 0.9770992398262024, 0.9770992398262024, 0.9694656729698181, 0.9923664331436157]
vgg19_train_loss=[0.6044167876243591, 0.40535441040992737, 0.2590985596179962, 0.17026245594024658, 0.1164674162864685, 0.07166538387537003, 0.04674951732158661, 0.03524041175842285, 0.024900346994400024, 0.020408261567354202, 0.017544757574796677, 0.013672406785190105, 0.013270096853375435, 0.009606174193322659, 0.011759499087929726, 0.008638439700007439, 0.009416704997420311, 0.00877991784363985, 0.007391293067485094, 0.00652482733130455, 0.008164260536432266, 0.006842906586825848, 0.007218949031084776, 0.007182293571531773, 0.005927281454205513, 0.005538401193916798, 0.011410793289542198, 0.01065074373036623, 0.010600671172142029, 0.006599470041692257, 0.008886042982339859, 0.009786569513380527, 0.008692785166203976]
vgg19_validation_loss=[0.6036262512207031, 0.6444411277770996, 0.4291178584098816, 0.2709086239337921, 0.22950823605060577, 0.15948325395584106, 0.13416627049446106, 0.11900895833969116, 0.08990799635648727, 0.07891101390123367, 0.06729350239038467, 0.053891371935606, 0.0385156087577343, 0.03905206173658371, 0.04154031351208687, 0.036346010863780975, 0.038894981145858765, 0.03451278805732727, 0.03634738177061081, 0.03949568420648575, 0.04090254008769989, 0.06905096024274826, 0.041775595396757126, 0.03238475322723389, 0.029926760122179985, 0.02760080248117447, 0.0247034914791584, 0.06498554348945618, 0.06167197600007057, 0.06228550896048546, 0.05696902051568031, 0.061259184032678604, 0.041134558618068695]
vgg19_test_loss=0.027918675914406776
vgg19_test_accuracy=0.9848484992980957
# %%
resnet_train_accuracy=[0.8384279608726501, 0.9344978332519531, 0.9759825468063354, 0.9890829920768738, 0.9868995547294617, 0.9934498071670532, 0.9934498071670532, 0.9956331849098206, 0.9912663698196411, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9956331849098206, 0.9978166222572327, 0.9978166222572327, 0.9978166222572327, 0.9956331849098206, 0.9978166222572327]
resnet_validation_accuracy=[0.7099236845970154, 0.7938931584358215, 0.8625954389572144, 0.9007633328437805, 0.9312977194786072, 0.9694656729698181, 0.9694656729698181, 0.9770992398262024, 0.9770992398262024, 0.9847328066825867, 0.9847328066825867, 0.9847328066825867, 0.9770992398262024, 0.9770992398262024, 0.9694656729698181, 0.9694656729698181, 0.9770992398262024, 0.9770992398262024, 0.9770992398262024]
resnet_train_loss=[0.48654627799987793, 0.21424035727977753, 0.10161810368299484, 0.05615560710430145, 0.040877506136894226, 0.02232326567173004, 0.016877971589565277, 0.01261045504361391, 0.010795723646879196, 0.009386541321873665, 0.008997739292681217, 0.007805992849171162, 0.008604275062680244, 0.010132048279047012, 0.007712056860327721, 0.007152960170060396, 0.007464511785656214, 0.00856202095746994, 0.006480277981609106]
resnet_validation_loss=[0.6249396204948425, 0.4696585237979889, 0.30222076177597046, 0.2375180572271347, 0.1672908216714859, 0.11252526193857193, 0.09285273402929306, 0.08045067638158798, 0.06954513490200043, 0.05530589073896408, 0.04893407225608826, 0.048554953187704086, 0.04822317883372307, 0.05548221245408058, 0.06441805511713028, 0.07020651549100876, 0.07366452366113663, 0.059909887611866, 0.06348655372858047]
resnet_test_loss=0.13456633687019348
resnet_test_accuracy=0.939393937587738
# %%
# MobileNet

ticks=[]
max_len=len(mobilenet_train_accuracy)
for i in range(0,max_len,5):
    ticks.append(i)

plt.plot(mobilenet_train_accuracy, label=f'Training Accuracy')
plt.plot(mobilenet_validation_accuracy, label=f'Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend(loc="lower right")
plt.title('Training & Validation Accuracy')
plt.xticks(ticks=ticks)
plt.show()

plt.plot(mobilenet_train_loss, label=f'Training Loss')
plt.plot(mobilenet_validation_loss, label=f'Validation Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend(loc="upper right")
plt.title('Training & Validation Loss')
plt.xticks(ticks=ticks)
plt.show()
# %%
# VGG19 Accuracy

ticks=[]
max_len=len(vgg19_train_accuracy)
for i in range(0,max_len,5):
    ticks.append(i)

plt.plot(vgg19_train_accuracy, label=f'Training Accuracy')
plt.plot(vgg19_validation_accuracy, label=f'Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend(loc="lower right")
plt.title('Training & Validation Accuracy')
plt.xticks(ticks=ticks)
plt.show()

plt.plot(vgg19_train_loss, label=f'Training Loss')
plt.plot(vgg19_validation_loss, label=f'Validation Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend(loc="upper right")
plt.title('Training & Validation Loss')
plt.xticks(ticks=ticks)
plt.show()
# %%
# Resnet Accuracy

ticks=[]
max_len=len(resnet_train_accuracy)
for i in range(0,max_len,5):
    ticks.append(i)

plt.plot(resnet_train_accuracy, label=f'Training Accuracy')
plt.plot(resnet_validation_accuracy, label=f'Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend(loc="lower right")
plt.title('Training & Validation Accuracy')
plt.xticks(ticks=ticks)
plt.show()

plt.plot(resnet_train_loss, label=f'Training Loss')
plt.plot(resnet_validation_loss, label=f'Validation Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend(loc="upper right")
plt.title('Training & Validation Loss')
plt.xticks(ticks=ticks)
plt.show()
# %%
plt.plot(mobilenet_train_accuracy, label=f'MobileNet')
plt.plot(vgg19_train_accuracy, label=f'VGG19')
plt.plot(resnet_train_accuracy, label=f'ResNet')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend(loc="lower right")
plt.title('Training Accuracy')
plt.show()

plt.plot(mobilenet_validation_accuracy, label=f'MobileNet')
plt.plot(vgg19_validation_accuracy, label=f'VGG19')
plt.plot(resnet_validation_accuracy, label=f'ResNet')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend(loc="lower right")
plt.title('Validation Accuracy')
plt.show()


plt.plot(mobilenet_train_loss, label=f'MobileNet')
plt.plot(vgg19_train_loss, label=f'VGG19')
plt.plot(resnet_train_loss, label=f'ResNet')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend(loc="upper right")
plt.title('Training loss')
plt.show()

plt.plot(mobilenet_validation_loss, label=f'MobileNet')
plt.plot(vgg19_validation_loss, label=f'VGG19')
plt.plot(resnet_validation_loss, label=f'ResNet')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend(loc="upper right")
plt.title('Validation loss')
plt.show()
# %%